class Draw{
    //Constructor
    constructor(){
      this.type='draw';
      this.position = [0.0,0.0,0.0];
      this.color = [1.0,1.0,1.0,1.0];
      this.size = 5.0;
    }
    //render this shape
    render() {
      var data = [[[-0.7,0.5],[1.0, 1.0, 1.0, 1.0],0],
        [[-0.7,0.5],[1.0, 1.0, 1.0, 1.0],1],
        [[-0.5,0.7],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.5,0.5],[1.0, 1.0, 1.0, 1.0],1],
        [[-0.3,0.7],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.3,0.5],[1.0, 1.0, 1.0, 1.0],1],
        [[-0.1,0.7],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.1,0.5],[1.0, 1.0, 1.0, 1.0],1],
        [[0.1,0.7],[1.0, 1.0, 1.0, 1.0],2],
        [[0.1,0.5],[1.0, 1.0, 1.0, 1.0],1],
        [[0.3,0.7],[1.0, 1.0, 1.0, 1.0],2],
        [[0.3,0.5],[1.0, 1.0, 1.0, 1.0],1],
        [[0.5,0.7],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.9,0.3],[1.0, 1.0, 1.0, 1.0],1],
        [[-0.7,0.5],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.7,0.3],[1.0, 1.0, 1.0, 1.0],1],
        [[-0.5,0.5],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.5,0.3],[1.0, 1.0, 1.0, 1.0],1],
        [[-0.3,0.5],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.3,0.3],[1.0, 1.0, 1.0, 1.0],1],
        [[-0.1,0.5],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.1,0.3],[1.0, 1.0, 1.0, 1.0],1],
        [[0.1,0.5],[1.0, 1.0, 1.0, 1.0],2],
        [[0.1,0.3],[1.0, 1.0, 1.0, 1.0],1],
        [[0.3,0.5],[1.0, 1.0, 1.0, 1.0],2],
        [[0.3,0.3],[1.0, 1.0, 1.0, 1.0],1],
        [[0.5,0.5],[1.0, 1.0, 1.0, 1.0],2],
        [[0.5,0.3],[1.0, 1.0, 1.0, 1.0],1],
        [[0.7,0.5],[1.0, 1.0, 1.0, 1.0],2],
        [[0.5,0.1],[1.0, 1.0, 1.0, 1.0],1],
        [[0.7,0.3],[1.0, 1.0, 1.0, 1.0],2],
        [[0.3,0.1],[1.0, 1.0, 1.0, 1.0],1],
        [[0.5,0.3],[1.0, 1.0, 1.0, 1.0],2],
        [[0.1,0.1],[1.0, 1.0, 1.0, 1.0],1],
        [[0.3,0.3],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.1,0.1],[1.0, 1.0, 1.0, 1.0],1],
        [[0.1,0.3],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.3,0.1],[1.0, 1.0, 1.0, 1.0],1],
        [[-0.1,0.3],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.5,0.1],[1.0, 1.0, 1.0, 1.0],1],
        [[-0.3,0.3],[1.0, 1.0, 1.0, 1.0],2],
        [[-0.7,0.1],[1.0, 1.0, 1.0, 1.0],1],
        [[-0.5,0.3],[1.0, 1.0, 1.0, 1.0],2],
        [[0.4,0.2],[0.5, 0.5, 1.0, 1.0],3],
        [[0.2,-0.4],[0.5, 0.5, 1.0, 1.0],4],
        [[0.2,-0.4],[0.5, 0.5, 1.0, 1.0],3],
        [[-0.4,-0.2],[0.5, 0.5, 1.0, 1.0],4],
        [[-0.4,-0.2],[0.5, 0.5, 1.0, 1.0],3]
    ];
      for(var i = 0; i < 48; i++){
        var s_data = data[i];
        var xy = s_data[0];
        var rgba = s_data[1];
        var shape = s_data[2];
        var size = this.size;
        gl.uniform1f(u_Size, size);
        var d = this.size / 200; // delta
        if(shape == 0){
            gl.uniform4f(u_FragColor, rgba[0], rgba[1], rgba[2], rgba[3]);
            drawTriangle([xy[0], xy[1], xy[0] - d, xy[1], xy[0], xy[1] + d]);
        }
        else if(shape == 1){
            gl.uniform4f(u_FragColor, rgba[0], rgba[1], rgba[2], rgba[3]);
            drawTriangle([xy[0], xy[1], xy[0] + d, xy[1], xy[0], xy[1] + d]);
        }
        else if(shape == 2){
            gl.uniform4f(u_FragColor, rgba[0], rgba[1], rgba[2], rgba[3]);
            drawTriangle([xy[0], xy[1], xy[0] - d, xy[1], xy[0], xy[1] - d]);
        }
        else if(shape == 3){
            gl.uniform4f(u_FragColor, rgba[0], rgba[1], rgba[2], rgba[3]);
            drawTriangle([xy[0]-d/2, xy[1]-d/2, xy[0]+d/2, xy[1]-d/2, xy[0], xy[1]-3*d/2]);
        }
        else if(shape == 4){
            gl.uniform4f(u_FragColor, rgba[0], rgba[1], rgba[2], rgba[3]);
            drawTriangle([xy[0]-d/2, xy[1]-d/2, xy[0]+d/2, xy[1]-d/2, xy[0], xy[1]+d/2]);
        }
      }

    }

  }